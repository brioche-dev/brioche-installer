name: CI

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  id-token: write
  contents: read
  attestations: write

jobs:
  publish:
    name: Publish
    if: github.event_name == 'push' && github.repository == 'brioche-dev/brioche-installer'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Sign installer
        run: |
          SIGNING_NAMESPACE="installer@brioche.dev"

          install -m 0600 <(echo "$BRIOCHE_INSTALLER_CODESIGN_PRIVATE_KEY") ./brioche-installer-codesign-key
          ssh-keygen -Y sign -n "$SIGNING_NAMESPACE" -f ./brioche-installer-codesign-key src/install.sh
          rm brioche-installer-codesign-key

          sha256sum src/install.sh
          cat src/install.sh.sig
        env:
          BRIOCHE_INSTALLER_CODESIGN_PRIVATE_KEY: ${{ secrets.BRIOCHE_INSTALLER_CODESIGN_PRIVATE_KEY }}
      - name: Attest installer
        id: attest
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: |
            src/install.sh
            src/install.sh.sig
      - name: Upload to S3
        run: |
          mkdir -p "upload/$GITHUB_SHA/" "upload/channels/stable/"
          cp "src/install.sh" "src/install.sh.sig" "upload/$GITHUB_SHA/"
          cp "$attestation_bundle" "upload/$GITHUB_SHA/attestation.json"
          cp "upload/$GITHUB_SHA"/* "upload/channels/stable/"
          echo "$GITHUB_SHA" > "upload/channels/stable/latest-version.txt"

          ls -lhR upload/

          # Upload new version dir first
          aws s3 sync \
            --endpoint-url "$AWS_ENDPOINT_URL_S3" \
            --delete \
            "upload/$GITHUB_SHA/" \
            "s3://brioche-installer/$GITHUB_SHA/"

          # ...then update the channel
          aws s3 sync \
            --endpoint-url "$AWS_ENDPOINT_URL_S3" \
            --delete \
            "upload/channels/stable/" \
            "s3://brioche-installer/channels/stable/"
        env:
          attestation_bundle: ${{ steps.attest.outputs.bundle-path }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_REQUEST_CHECKSUM_CALCULATION: WHEN_REQUIRED
          AWS_RESPONSE_CHECKSUM_CALCULATION: WHEN_REQUIRED
          AWS_ENDPOINT_URL_S3: ${{ vars.AWS_ENDPOINT_URL_S3 }}
